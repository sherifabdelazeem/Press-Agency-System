@using NewsWebApp.Models

@using Microsoft.AspNet.Identity;
@using Microsoft.AspNet.Identity.Owin;
@model NewsWebApp.Models.EditViewModel
@{ ApplicationDbContext db = new ApplicationDbContext();
                var UserId = User.Identity.GetUserId();
                var user = db.Users.Where(a => a.Id == UserId).SingleOrDefault();
                if (user.UserType == "Editor")
                {

                    Layout = "~/Views/Shared/_Factory.cshtml";
                }
                else
                {
                    Layout = "~/Views/Shared/_DashBoard.cshtml";

                } 
 }
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <div>
            <h3>
                @ViewBag.Message
            </h3>
        </div>
        </div>
        <hr />
    <div class="form-horizontal">
        <h3 style="color:mediumblue">Edit profile</h3>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            <div >
                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div  class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div  class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div >
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div>
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div  class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div >
                @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div  class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div >
                @Html.LabelFor(model => model.UserImage, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div  class="col-md-10">
                @Html.EditorFor(model => model.UserImage, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div >
                @Html.LabelFor(model => model.CurrentPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div  class="col-md-10">
                @Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div >
                @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            </div>
            <div  class="col-md-10">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input style="color:white;background-color:blue" type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

